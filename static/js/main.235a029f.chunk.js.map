{"version":3,"sources":["helpers.js","components/text-to-copy/index.js","components/header/index.js","components/preview-window/index.js","components/previews/index.js","components/footer/index.js","components/slider-input/index.js","components/variation-colors/index.js","App.js","reportWebVitals.js","index.js"],"names":["hslToHex","h","s","l","a","Math","min","f","n","k","color","max","round","toString","padStart","hslToRgb","c","abs","x","m","r","g","b","value","decimals","Number","TextToCopy","props","onSuccess","bind","state","success","successClass","console","info","this","setState","setTimeout","component","data-clipboard-text","clipboardText","button-title","btnTitle","className","children","Component","Header","hue","saturation","lightness","style","backgroundColor","PreviewWindow","textColor","bgColor","userText","styles","Previews","useState","setUserText","light","dark","class","htmlFor","name","type","placeholder","onChange","e","target","Footer","href","SliderInput","onSliderChange","createLabel","step","VariationColors","numberOfVariations","Array","from","length","_","i","findNewShadeTintLightness","degree","diff","newLightness","shade","tint","diffStep","diffAmt","returnBasedOnName","map","App","savedHue","localStorage","getItem","JSON","parse","setHue","savedSaturation","setSaturation","savedLightness","setLightness","savedColor","setColor","useEffect","setItem","stringify","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oVAAO,SAASA,EAASC,EAAGC,EAAGC,GAC9BA,GAAK,IACL,IAAMC,EAAKF,EAAIG,KAAKC,IAAIH,EAAG,EAAIA,GAAM,IAC/BI,EAAI,SAACC,GACV,IAAMC,GAAKD,EAAIP,EAAI,IAAM,GACnBS,EAAQP,EAAIC,EAAIC,KAAKM,IAAIN,KAAKC,IAAIG,EAAI,EAAG,EAAIA,EAAG,IAAK,GAC3D,OAAOJ,KAAKO,MAAM,IAAMF,GACtBG,SAAS,IACTC,SAAS,EAAG,MAEf,MAAM,IAAN,OAAWP,EAAE,IAAb,OAAkBA,EAAE,IAApB,OAAyBA,EAAE,IAGrB,SAASQ,EAASd,EAAGC,EAAGC,GAC9BD,GAAK,IACLC,GAAK,IAEL,IAAIa,GAAK,EAAIX,KAAKY,IAAI,EAAId,EAAI,IAAMD,EACnCgB,EAAIF,GAAK,EAAIX,KAAKY,IAAMhB,EAAI,GAAM,EAAK,IACvCkB,EAAIhB,EAAIa,EAAI,EACZI,EAAI,EACJC,EAAI,EACJC,EAAI,EA+BL,OA7BI,GAAKrB,GAAKA,EAAI,IACjBmB,EAAIJ,EACJK,EAAIH,EACJI,EAAI,GACM,IAAMrB,GAAKA,EAAI,KACzBmB,EAAIF,EACJG,EAAIL,EACJM,EAAI,GACM,KAAOrB,GAAKA,EAAI,KAC1BmB,EAAI,EACJC,EAAIL,EACJM,EAAIJ,GACM,KAAOjB,GAAKA,EAAI,KAC1BmB,EAAI,EACJC,EAAIH,EACJI,EAAIN,GACM,KAAOf,GAAKA,EAAI,KAC1BmB,EAAIF,EACJG,EAAI,EACJC,EAAIN,GACM,KAAOf,GAAKA,GAAK,MAC3BmB,EAAIJ,EACJK,EAAI,EACJC,EAAIJ,GAME,QAJPE,EAAIf,KAAKO,MAAgB,KAATQ,EAAID,KAIA,MAHpBE,EAAIhB,KAAKO,MAAgB,KAATS,EAAIF,KAGW,MAF/BG,EAAIjB,KAAKO,MAAgB,KAATU,EAAIH,KAEsB,IAGpC,SAASP,EAAMW,EAAOC,GAC5B,OAAOC,OAAOpB,KAAKO,MAAMW,EAAQ,IAAMC,GAAY,KAAOA,G,qECf5CE,E,kDAtCd,WAAYC,GAAQ,IAAD,8BAClB,cAAMA,IACDC,UAAY,EAAKA,UAAUC,KAAf,gBACX,EAAKC,MAAQ,CACTC,SAAS,EACTC,aAAc,IALN,E,6CASnB,WAAa,IAAD,OACXC,QAAQC,KAAK,uBACPC,KAAKC,SAAS,CACVL,SAAS,EACTC,aAAc,YAElBK,YAAW,WACP,EAAKD,SAAS,CACVL,SAAS,EACTC,aAAc,OAEnB,Q,oBAGV,WACC,OACC,cAAC,IAAD,CACCM,UAAU,OACVC,sBAAqBJ,KAAKR,MAAMa,cAChCC,eAAcN,KAAKR,MAAMe,SACzBd,UAAWO,KAAKP,UACJe,UAAS,qBAAgBR,KAAKL,MAAME,cALjD,SAOEG,KAAKL,MAAMC,QAAU,UAAYI,KAAKR,MAAMiB,e,GAjCxBC,aCwCVC,MAvCf,YAAkE,IAAhDpC,EAA+C,EAA/CA,MAAOqC,EAAwC,EAAxCA,IAAKC,EAAmC,EAAnCA,WAAYC,EAAuB,EAAvBA,UAAWL,EAAY,EAAZA,SAEpD,OACC,yBAAQD,UAAU,SAAlB,UACC,oBAAIA,UAAU,QAAd,8BACA,mBAAGA,UAAU,WAAb,4EAGA,qBAAKA,UAAU,eAAeO,MAAO,CAAEC,gBAAiBzC,KAEvDkC,EAED,sBAAKD,UAAU,aAAf,UACC,4BACC,cAAC,EAAD,CAAYH,cAAe9B,EAAOgC,SAAQ,eAAUhC,GAApD,SACEA,MAGH,4BACC,cAAC,EAAD,CACC8B,cAAexC,EAAS+C,EAAKC,EAAYC,GACzCP,SAAQ,eAAU1C,EAAS+C,EAAKC,EAAYC,IAF7C,SAIEjD,EAAS+C,EAAKC,EAAYC,OAG7B,4BACC,cAAC,EAAD,CACCT,cAAezB,EAASgC,EAAKC,EAAYC,GACzCP,SAAQ,eAAU3B,EAASgC,EAAKC,EAAYC,IAF7C,SAIElC,EAASgC,EAAKC,EAAYC,c,MCdlBG,MAnBf,YAAwD,IAAhCC,EAA+B,EAA/BA,UAAWC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,SAElCC,EAAS,CACX9C,MAAO2C,EACPF,gBAAiBG,GAErB,OACD,sBAAKJ,MAAOM,EAAQb,UAAU,iBAA9B,UACC,6BAAKY,GAAsB,+BAC3B,mS,MC2DWE,MAlEf,YAA4B,IAAT/C,EAAQ,EAARA,MAAQ,EAESgD,mBAAS,IAFlB,mBAEhBH,EAFgB,KAENI,EAFM,KAQjBC,EAAQ,kBACRC,EAAO,iBAEb,OACD,kCACC,oBAAIC,MAAM,QAAV,qBACA,gGACA,4DAA8B,uBAA9B,2BACA,uBACA,uBAAOC,QAAQ,UAAUpB,UAAU,aAAnC,qBAGA,uBACCA,UAAU,aACVqB,KAAK,UACLC,KAAK,OACL1C,MAAOgC,EACPW,YAAY,iBACZC,SAtBD,SAA8BC,GAC1BT,EAAYS,EAAEC,OAAO9C,UAuBzB,sBAAKoB,UAAU,eAAf,UACC,kCACC,cAAC,EAAD,CACCW,QAAS5C,EACT2C,UAAWO,EACXL,SAAUA,MAIZ,kCACC,cAAC,EAAD,CACCD,QAASM,EACTP,UAAW3C,EACX6C,SAAUA,MAIZ,kCACC,cAAC,EAAD,CACCD,QAAS5C,EACT2C,UAAWQ,EACXN,SAAUA,MAIZ,kCACC,cAAC,EAAD,CACCD,QAASO,EACTR,UAAW3C,EACX6C,SAAUA,a,MCjDFe,MAVf,WACI,OACD,wBAAQ3B,UAAU,SAAlB,SACC,gDACY,mBAAG4B,KAAK,2BAAR,iC,MC2BDC,MA/Bf,YAA6D,IAArCR,EAAoC,EAApCA,KAAMrD,EAA8B,EAA9BA,IAAKY,EAAyB,EAAzBA,MAAOkD,EAAkB,EAAlBA,eAczC,OACC,sBAAK9B,UAAU,SAAf,UACC,uBAAOA,UAAU,eAAeoB,QAASC,EAAzC,SAdF,SAAqBA,EAAMzC,GAC1B,MAAa,QAATyC,EACI,MAAQzC,EAEE,eAATyC,EACD,MAAQzC,EAAQ,IAEN,cAATyC,EACD,MAAQzC,EAAQ,SADnB,EAO4CmD,CAAYV,EAAMzC,KAClE,uBACCoB,UAAU,eACVqB,KAAMA,EACNC,KAAK,QACL3D,IAAI,IACJK,IAAKA,EACLgE,KAAK,IACLpD,MAAOA,EACP4C,SAAUM,Q,MCiGCG,MAxHf,YAA8D,IAApCZ,EAAmC,EAAnCA,KAAMjB,EAA6B,EAA7BA,IAAKC,EAAwB,EAAxBA,WAAYC,EAAY,EAAZA,UAEvC4B,EAAqBC,MAAMC,KAAK,CAAEC,OAAQ,KAAM,SAACC,EAAGC,GAAJ,OAAUA,EAAI,KAEpE,SAASC,EAA0BhF,EAAGiF,GAAsC,IACpEC,EACAC,EAFsCC,EAA6B,wDAAdC,EAAc,wDAGnED,EACAF,EAAOlF,EACAqF,IACPH,EAAO,IAAM5D,OAAOtB,IAGxB,IAAMsF,EAAWhE,OAAO4D,GAAQ,GAC5BK,EAAUjE,OAAOgE,GAAYhE,OAAO2D,GAQxC,OANIG,EACAD,EAAe7D,OAAOtB,GAAKsB,OAAOiE,GAC3BF,IACPF,EAAe7D,OAAOtB,GAAKsB,OAAOiE,IAG/B9E,EAAM0E,EAAc,GAG/B,SAASK,EAAkB3B,EAAMf,EAAWzC,GACxC,MAAa,WAATwD,EACOmB,EAA0BlC,EAAWzC,GAAG,GAAM,GAEvC,UAATwD,EACEmB,EAA0BlC,EAAWzC,GAAG,GAAO,QADrD,EAKT,OACD,oCACC,oBAAImC,UAAU,QAAd,SAAuBqB,IACvB,qBAAKrB,UAAU,aAAf,SACEkC,EAAmBe,KAAI,SAACpF,GAAD,OACvB,sBAAamC,UAAU,kBAAvB,UACC,qBACCA,UAAU,oBACVO,MAAO,CACNC,gBAAgB,OAAD,OAASJ,EAAT,aAAiBC,EAAjB,cAAiC2C,EAC/C3B,EACAf,EACAzC,GAHc,SAOjB,sBAAKmC,UAAU,wBAAf,UACC,4BACC,cAAC,EAAD,CACCH,cAAa,cAASO,EAAT,aAAiBC,EAAjB,cAAiC2C,EAC7C3B,EACAf,EACAzC,GAHY,MAKbkC,SAAQ,6BAAiBK,EAAjB,aAAyBC,EAAzB,cAAyC2C,EAChD3B,EACAf,EACAzC,GAHO,OANT,uBAWSuC,EAXT,aAWiBC,EAXjB,cAWiC2C,EAChC3B,EACAf,EACAzC,GAdD,UAkBD,uBACA,4BACC,cAAC,EAAD,CACCgC,cAAexC,EACd+C,EACAC,EACA2C,EAAkB3B,EAAMf,EAAWzC,IAEpCkC,SAAQ,eAAU1C,EACjB+C,EACAC,EACA2C,EAAkB3B,EAAMf,EAAWzC,KATrC,SAYER,EACA+C,EACAC,EACA2C,EAAkB3B,EAAMf,EAAWzC,QAItC,uBACA,4BACC,cAAC,EAAD,CACCgC,cAAezB,EACdgC,EACAC,EACA2C,EAAkB3B,EAAMf,EAAWzC,IAEpCkC,SAAQ,eAAU3B,EACjBgC,EACAC,EACA2C,EAAkB3B,EAAMf,EAAWzC,KATrC,SAYEO,EACAgC,EACAC,EACA2C,EAAkB3B,EAAMf,EAAWzC,aArE9BA,YC+EDqF,MAlHf,WAAgB,IAAD,EAESnC,oBAAS,WAC7B,IAAMoC,EAAWC,aAAaC,QAAQ,OAEtC,OAAIF,EACKG,KAAKC,MAAMJ,GAEX,SARE,mBAEN/C,EAFM,KAEDoD,EAFC,OAWuBzC,oBAAS,WAC7C,IAAM0C,EAAkBL,aAAaC,QAAQ,cAE7C,OAAII,EACIH,KAAKC,MAAME,GAEX,QAjBK,mBAWNpD,EAXM,KAWMqD,EAXN,OAoBqB3C,oBAAS,WAC3C,IAAM4C,EAAiBP,aAAaC,QAAQ,aAE5C,OAAIM,EACIL,KAAKC,MAAMI,GAEX,QA1BK,mBAoBNrD,EApBM,KAoBKsD,EApBL,OA6Ba7C,oBAAS,WACjC,IAAM8C,EAAaT,aAAaC,QAAQ,SAExC,OAAIQ,EACKP,KAAKC,MAAMM,GAEZ,OAAN,OAAczD,EAAd,aAAsBC,EAAtB,cAAsCC,EAAtC,SAnCS,mBA6BNvC,EA7BM,KA6BC+F,EA7BD,KA6Db,OAtBAC,qBAAU,WACVX,aAAaY,QAAQ,QAASV,KAAKW,UAAUlG,IAC3CqF,aAAaY,QAAQ,MAAOV,KAAKW,UAAU7D,IAC3CgD,aAAaY,QAAQ,aAAcV,KAAKW,UAAU5D,IAClD+C,aAAaY,QAAQ,YAAaV,KAAKW,UAAU3D,MACjD,CAACvC,EAAOqC,EAAKC,EAAYC,IAkB3B,qBAAKN,UAAU,MAAf,SACC,sBAAKA,UAAU,YAAf,UACC,eAAC,EAAD,CACCjC,MAAOA,EACPqC,IAAKA,EACLC,WAAYA,EACZC,UAAWA,EAJZ,UAMC,cAAC,EAAD,CACCe,KAAK,MACLrD,IAAI,MACJY,MAAOwB,EACP0B,eA5BJ,SAAyBL,GACvB+B,EAAO/B,EAAEC,OAAO9C,OAChBkF,EAAS,OAAD,OAAQrC,EAAEC,OAAO9C,MAAjB,aAA2ByB,EAA3B,cAA2CC,EAA3C,UA6BP,cAAC,EAAD,CACCe,KAAK,aACLrD,IAAI,MACJY,MAAOyB,EACPyB,eA9BJ,SAAgCL,GAChCiC,EAAcjC,EAAEC,OAAO9C,OACrBkF,EAAS,OAAD,OAAQ1D,EAAR,aAAgBqB,EAAEC,OAAO9C,MAAzB,cAAoC0B,EAApC,UA+BP,cAAC,EAAD,CACCe,KAAK,YACLrD,IAAI,MACJY,MAAO0B,EACPwB,eAhCJ,SAA+BL,GAC/BmC,EAAanC,EAAEC,OAAO9C,OACpBkF,EAAS,OAAD,OAAQ1D,EAAR,aAAgBC,EAAhB,cAAgCoB,EAAEC,OAAO9C,MAAzC,aAkCR,iCACC,cAAC,EAAD,CACCyC,KAAK,SACLjB,IAAKA,EACLC,WAAYA,EACZC,UAAWA,IAGZ,cAAC,EAAD,CACCe,KAAK,QACLjB,IAAKA,EACLC,WAAYA,EACZC,UAAWA,OAGb,cAAC,EAAD,CAAUvC,MAAOA,IACjB,cAAC,EAAD,UCxGWmG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.235a029f.chunk.js","sourcesContent":["export function hslToHex(h, s, l) {\n\tl /= 100;\n\tconst a = (s * Math.min(l, 1 - l)) / 100;\n\tconst f = (n) => {\n\t\tconst k = (n + h / 30) % 12;\n\t\tconst color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n\t\treturn Math.round(255 * color)\n\t\t\t.toString(16)\n\t\t\t.padStart(2, \"0\");\n\t};\n\treturn `#${f(0)}${f(8)}${f(4)}`;\n}\n\nexport function hslToRgb(h, s, l) {\n\ts /= 100;\n\tl /= 100;\n\n\tlet c = (1 - Math.abs(2 * l - 1)) * s,\n\t\tx = c * (1 - Math.abs(((h / 60) % 2) - 1)),\n\t\tm = l - c / 2,\n\t\tr = 0,\n\t\tg = 0,\n\t\tb = 0;\n\n\tif (0 <= h && h < 60) {\n\t\tr = c;\n\t\tg = x;\n\t\tb = 0;\n\t} else if (60 <= h && h < 120) {\n\t\tr = x;\n\t\tg = c;\n\t\tb = 0;\n\t} else if (120 <= h && h < 180) {\n\t\tr = 0;\n\t\tg = c;\n\t\tb = x;\n\t} else if (180 <= h && h < 240) {\n\t\tr = 0;\n\t\tg = x;\n\t\tb = c;\n\t} else if (240 <= h && h < 300) {\n\t\tr = x;\n\t\tg = 0;\n\t\tb = c;\n\t} else if (300 <= h && h <= 360) {\n\t\tr = c;\n\t\tg = 0;\n\t\tb = x;\n\t}\n\tr = Math.round((r + m) * 255);\n\tg = Math.round((g + m) * 255);\n\tb = Math.round((b + m) * 255);\n\n\treturn \"rgb(\" + r + \", \" + g + \", \" + b + \")\";\n}\n\nexport function round(value, decimals) {\n\treturn Number(Math.round(value + \"e\" + decimals) + \"e-\" + decimals);\n}","import React, { Component } from \"react\";\nimport Clipboard from \"react-clipboard.js\";\n\nclass TextToCopy extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.onSuccess = this.onSuccess.bind(this);\n        this.state = { \n            success: false,\n            successClass: \"\"\n        };\n\t}\n\n\tonSuccess() {\n\t\tconsole.info(\"successfully copied\");\n        this.setState({ \n            success: true,\n            successClass: \"success\"\n        });\n        setTimeout(() => {\n            this.setState({\n                success: false,\n                successClass: \"\",\n            });\n        }, 1500);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Clipboard\n\t\t\t\tcomponent=\"span\"\n\t\t\t\tdata-clipboard-text={this.props.clipboardText}\n\t\t\t\tbutton-title={this.props.btnTitle}\n\t\t\t\tonSuccess={this.onSuccess}\n                className={`color-name ${this.state.successClass}`}\n\t\t\t>\n\t\t\t\t{this.state.success ? \"Copied!\" : this.props.children}\n\t\t\t</Clipboard>\n\t\t);\n\t}\n}\n\nexport default TextToCopy\n","import { hslToHex, hslToRgb } from \"../../helpers\";\nimport \"./styles/header.css\"\nimport TextToCopy from \"../text-to-copy\";\n\nfunction Header({ color, hue, saturation, lightness, children }) {\n\n\treturn (\n\t\t<header className=\"header\">\n\t\t\t<h1 className=\"title\">HSL Color Picker</h1>\n\t\t\t<p className=\"subtitle\">\n\t\t\t\tClick on any HSL, HEX, or RGB value to copy to your clipboard!\n\t\t\t</p>\n\t\t\t<div className=\"color-window\" style={{ backgroundColor: color }}></div>\n\n\t\t\t{children}\n\n\t\t\t<div className=\"text-block\">\n\t\t\t\t<p>\n\t\t\t\t\t<TextToCopy clipboardText={color} btnTitle={`Copy ${color}`}>\n\t\t\t\t\t\t{color}\n\t\t\t\t\t</TextToCopy>\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\t<TextToCopy\n\t\t\t\t\t\tclipboardText={hslToHex(hue, saturation, lightness)}\n\t\t\t\t\t\tbtnTitle={`Copy ${hslToHex(hue, saturation, lightness)}`}\n\t\t\t\t\t>\n\t\t\t\t\t\t{hslToHex(hue, saturation, lightness)}\n\t\t\t\t\t</TextToCopy>\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\t<TextToCopy\n\t\t\t\t\t\tclipboardText={hslToRgb(hue, saturation, lightness)}\n\t\t\t\t\t\tbtnTitle={`Copy ${hslToRgb(hue, saturation, lightness)}`}\n\t\t\t\t\t>\n\t\t\t\t\t\t{hslToRgb(hue, saturation, lightness)}\n\t\t\t\t\t</TextToCopy>\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</header>\n\t);\n}\n\nexport default Header;\n","import \"./styles/preview-window.css\"\n\nfunction PreviewWindow({textColor, bgColor, userText}) {\n\n    const styles = {\n        color: textColor,\n        backgroundColor: bgColor\n    }\n    return (\n\t\t\t<div style={styles} className=\"preview-window\">\n\t\t\t\t<h2>{userText ? userText : \"HSL is the best thing ever\"}</h2>\n\t\t\t\t<p>\n\t\t\t\t\tLorem ipsum dolor sit amet, consectetur adipiscing elit. In et ipsum\n\t\t\t\t\tvel lorem posuere interdum ultricies sed lectus. Aliquam bibendum\n\t\t\t\t\tsapien ac elit ultricies egestas. Suspendisse sagittis vel magna at\n\t\t\t\t\tfinibus. Phasellus interdum arcu et ornare dapibus. \n\t\t\t\t</p>\n\t\t\t</div>\n\t\t);\n}\n\nexport default PreviewWindow","import { useState } from \"react\";\nimport PreviewWindow from \"../preview-window\";\nimport \"./styles/previews.css\"\n\nfunction Previews({color}) {\n\n    const [userText, setUserText] = useState(\"\");\n\n    function handleUserTextChange(e) {\n        setUserText(e.target.value)\n    }\n\n    const light = \"hsl(0, 0%, 99%)\"\n    const dark = \"hsl(0, 0%, 7%)\"\n\n    return (\n\t\t\t<aside>\n\t\t\t\t<h2 class=\"title\">Preview</h2>\n\t\t\t\t<p>View your selection against light and dark text or backgrounds.</p>\n\t\t\t\t<small>Light = hsl(0, 0%, 99%)<br/>Dark = hsl(0, 0%, 7%)</small>\n\t\t\t\t<br />\n\t\t\t\t<label htmlFor=\"heading\" className=\"text-label\">\n\t\t\t\t\tHeading\n\t\t\t\t</label>\n\t\t\t\t<input\n\t\t\t\t\tclassName=\"text-input\"\n\t\t\t\t\tname=\"heading\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tvalue={userText}\n\t\t\t\t\tplaceholder=\"Type something\"\n\t\t\t\t\tonChange={handleUserTextChange}\n\t\t\t\t/>\n\t\t\t\t<div className=\"section-wrap\">\n\t\t\t\t\t<section>\n\t\t\t\t\t\t<PreviewWindow\n\t\t\t\t\t\t\tbgColor={color}\n\t\t\t\t\t\t\ttextColor={light}\n\t\t\t\t\t\t\tuserText={userText}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{/* <p className=\"description\">Light Text on Color Background</p> */}\n\t\t\t\t\t</section>\n\t\t\t\t\t<section>\n\t\t\t\t\t\t<PreviewWindow\n\t\t\t\t\t\t\tbgColor={light}\n\t\t\t\t\t\t\ttextColor={color}\n\t\t\t\t\t\t\tuserText={userText}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{/* <p className=\"description\">Color Text on Light Background</p> */}\n\t\t\t\t\t</section>\n\t\t\t\t\t<section>\n\t\t\t\t\t\t<PreviewWindow\n\t\t\t\t\t\t\tbgColor={color}\n\t\t\t\t\t\t\ttextColor={dark}\n\t\t\t\t\t\t\tuserText={userText}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{/* <p className=\"description\">Dark Text on Color Background</p> */}\n\t\t\t\t\t</section>\n\t\t\t\t\t<section>\n\t\t\t\t\t\t<PreviewWindow\n\t\t\t\t\t\t\tbgColor={dark}\n\t\t\t\t\t\t\ttextColor={color}\n\t\t\t\t\t\t\tuserText={userText}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{/* <p className=\"description\">Color Text on Dark Background</p> */}\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\t\t\t</aside>\n\t\t);\n}\n\nexport default Previews","import \"./styles/footer.css\"\n\nfunction Footer() {\n    return (\n\t\t\t<footer className=\"footer\">\n\t\t\t\t<small>\n\t\t\t\t\tCreated by <a href=\"https://colinswinney.com\">Colin Swinney</a>\n\t\t\t\t</small>\n\t\t\t</footer>\n\t\t);\n}\n\nexport default Footer","import \"./styles/slider-input.css\"\n\nfunction SliderInput ({ name, max, value, onSliderChange }) {\n\n\tfunction createLabel(name, value) {\n\t\tif (name === \"hue\") {\n\t\t\treturn \"H: \" + value\n\t\t}\n\t\telse if (name === \"saturation\") {\n\t\t\treturn \"S: \" + value + \"%\"\n\t\t}\n\t\telse if (name === \"lightness\") {\n\t\t\treturn \"L: \" + value + \"%\"\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className=\"slider\">\n\t\t\t<label className=\"slider-label\" htmlFor={name}>{createLabel(name, value)}</label>\n\t\t\t<input\n\t\t\t\tclassName=\"slider-input\"\n\t\t\t\tname={name}\n\t\t\t\ttype=\"range\"\n\t\t\t\tmin=\"0\"\n\t\t\t\tmax={max}\n\t\t\t\tstep=\"1\"\n\t\t\t\tvalue={value}\n\t\t\t\tonChange={onSliderChange}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport default SliderInput;","import \"./styles/variation-colors.css\"\nimport { hslToHex, hslToRgb, round } from \"../../helpers\";\nimport TextToCopy from \"../text-to-copy\";\n\nfunction VariationColors({name, hue, saturation, lightness}) {\n\n    const numberOfVariations = Array.from({ length: 10 }, (_, i) => i + 1);\n\n    function findNewShadeTintLightness(l, degree, shade = false, tint = false) {\n        let diff;\n        let newLightness;\n        if (shade) {\n            diff = l\n        } else if (tint) {\n            diff = 100 - Number(l)\n        }\n\n        const diffStep = Number(diff) / 10\n        let diffAmt = Number(diffStep) * Number(degree)\n        \n        if (shade) {\n            newLightness = Number(l) - Number(diffAmt)\n        } else if (tint) {\n            newLightness = Number(l) + Number(diffAmt)\n        }\n\n        return round(newLightness, 2);\n    }\n\n    function returnBasedOnName(name, lightness, n) {\n        if (name === \"Shades\") {\n            return findNewShadeTintLightness(lightness, n, true, false);\n        }\n        else if (name === \"Tints\") {\n            return findNewShadeTintLightness(lightness, n, false, true);\n        }\n    }\n\n    return (\n\t\t\t<section>\n\t\t\t\t<h2 className=\"title\">{name}</h2>\n\t\t\t\t<div className=\"color-grid\">\n\t\t\t\t\t{numberOfVariations.map((n) => (\n\t\t\t\t\t\t<div key={n} className=\"color-grid-cell\">\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclassName=\"color-grid-swatch\"\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tbackgroundColor: `hsl(${hue}, ${saturation}%, ${returnBasedOnName(\n\t\t\t\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\t\t\t\tlightness,\n\t\t\t\t\t\t\t\t\t\tn\n\t\t\t\t\t\t\t\t\t)}%)`,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t></div>\n\t\t\t\t\t\t\t<div className=\"color-grid-text-block\">\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t<TextToCopy\n\t\t\t\t\t\t\t\t\t\tclipboardText={`hsl(${hue}, ${saturation}%, ${returnBasedOnName(\n\t\t\t\t\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\t\t\t\t\tlightness,\n\t\t\t\t\t\t\t\t\t\t\tn\n\t\t\t\t\t\t\t\t\t\t)}%)`}\n\t\t\t\t\t\t\t\t\t\tbtnTitle={`Copy ${`hsl(${hue}, ${saturation}%, ${returnBasedOnName(\n\t\t\t\t\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\t\t\t\t\tlightness,\n\t\t\t\t\t\t\t\t\t\t\tn\n\t\t\t\t\t\t\t\t\t\t)}%)`}`}\n\t\t\t\t\t\t\t\t\t>{`hsl(${hue}, ${saturation}%, ${returnBasedOnName(\n\t\t\t\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\t\t\t\tlightness,\n\t\t\t\t\t\t\t\t\t\tn\n\t\t\t\t\t\t\t\t\t)}%)`}\n\t\t\t\t\t\t\t\t\t</TextToCopy>\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t<TextToCopy\n\t\t\t\t\t\t\t\t\t\tclipboardText={hslToHex(\n\t\t\t\t\t\t\t\t\t\t\thue,\n\t\t\t\t\t\t\t\t\t\t\tsaturation,\n\t\t\t\t\t\t\t\t\t\t\treturnBasedOnName(name, lightness, n)\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\tbtnTitle={`Copy ${hslToHex(\n\t\t\t\t\t\t\t\t\t\t\thue,\n\t\t\t\t\t\t\t\t\t\t\tsaturation,\n\t\t\t\t\t\t\t\t\t\t\treturnBasedOnName(name, lightness, n)\n\t\t\t\t\t\t\t\t\t\t)}`}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{hslToHex(\n\t\t\t\t\t\t\t\t\t\t\thue,\n\t\t\t\t\t\t\t\t\t\t\tsaturation,\n\t\t\t\t\t\t\t\t\t\t\treturnBasedOnName(name, lightness, n)\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</TextToCopy>\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t<TextToCopy\n\t\t\t\t\t\t\t\t\t\tclipboardText={hslToRgb(\n\t\t\t\t\t\t\t\t\t\t\thue,\n\t\t\t\t\t\t\t\t\t\t\tsaturation,\n\t\t\t\t\t\t\t\t\t\t\treturnBasedOnName(name, lightness, n)\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\tbtnTitle={`Copy ${hslToRgb(\n\t\t\t\t\t\t\t\t\t\t\thue,\n\t\t\t\t\t\t\t\t\t\t\tsaturation,\n\t\t\t\t\t\t\t\t\t\t\treturnBasedOnName(name, lightness, n)\n\t\t\t\t\t\t\t\t\t\t)}`}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{hslToRgb(\n\t\t\t\t\t\t\t\t\t\t\thue,\n\t\t\t\t\t\t\t\t\t\t\tsaturation,\n\t\t\t\t\t\t\t\t\t\t\treturnBasedOnName(name, lightness, n)\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</TextToCopy>\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</section>\n\t\t);\n}\n\nexport default VariationColors","import { useState, useEffect } from \"react\"\nimport \"./App.css\"\nimport Header from \"./components/header\";\nimport Previews from \"./components/previews\";\nimport Footer from \"./components/footer\";\nimport SliderInput from \"./components/slider-input\"\nimport VariationColors from \"./components/variation-colors\";\n\nfunction App() {\n\n  const [hue, setHue] = useState(() => {\n    const savedHue = localStorage.getItem(\"hue\");\n\n    if (savedHue) {\n      return JSON.parse(savedHue)\n    } else {\n      return \"180\"\n    }\n  })\n  const [saturation, setSaturation] = useState(() => {\n\t\tconst savedSaturation = localStorage.getItem(\"saturation\");\n\n\t\tif (savedSaturation) {\n\t\t\treturn JSON.parse(savedSaturation);\n\t\t} else {\n\t\t\treturn \"50\";\n\t\t}\n\t})\n  const [lightness, setLightness] = useState(() => {\n\t\tconst savedLightness = localStorage.getItem(\"lightness\");\n\n\t\tif (savedLightness) {\n\t\t\treturn JSON.parse(savedLightness);\n\t\t} else {\n\t\t\treturn \"50\";\n\t\t}\n\t})\n  const [color, setColor] = useState(() => {\n    const savedColor = localStorage.getItem(\"color\")\n\n    if (savedColor) {\n      return JSON.parse(savedColor)\n    } else {\n      return `hsl(${hue}, ${saturation}%, ${lightness}%)`;\n    }\n  });\n\n  useEffect(() => {\n\t\tlocalStorage.setItem(\"color\", JSON.stringify(color));\n    localStorage.setItem(\"hue\", JSON.stringify(hue));\n    localStorage.setItem(\"saturation\", JSON.stringify(saturation));\n    localStorage.setItem(\"lightness\", JSON.stringify(lightness));\n\t}, [color, hue, saturation, lightness]);\n\n  function handleHueChange(e) {\n    setHue(e.target.value)\n    setColor(`hsl(${e.target.value}, ${saturation}%, ${lightness}%)`);\n  }\n\n  function handleSaturationChange(e) {\n\t\tsetSaturation(e.target.value);\n    setColor(`hsl(${hue}, ${e.target.value}%, ${lightness}%)`);\n\t}\n\n  function handleLightnessChange(e) {\n\t\tsetLightness(e.target.value);\n    setColor(`hsl(${hue}, ${saturation}%, ${e.target.value}%)`);\n\t}\n\n  return (\n\t\t<div className=\"app\">\n\t\t\t<div className=\"container\">\n\t\t\t\t<Header\n\t\t\t\t\tcolor={color}\n\t\t\t\t\thue={hue}\n\t\t\t\t\tsaturation={saturation}\n\t\t\t\t\tlightness={lightness}\n\t\t\t\t>\n\t\t\t\t\t<SliderInput\n\t\t\t\t\t\tname=\"hue\"\n\t\t\t\t\t\tmax=\"360\"\n\t\t\t\t\t\tvalue={hue}\n\t\t\t\t\t\tonSliderChange={handleHueChange}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<SliderInput\n\t\t\t\t\t\tname=\"saturation\"\n\t\t\t\t\t\tmax=\"100\"\n\t\t\t\t\t\tvalue={saturation}\n\t\t\t\t\t\tonSliderChange={handleSaturationChange}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<SliderInput\n\t\t\t\t\t\tname=\"lightness\"\n\t\t\t\t\t\tmax=\"100\"\n\t\t\t\t\t\tvalue={lightness}\n\t\t\t\t\t\tonSliderChange={handleLightnessChange}\n\t\t\t\t\t/>\n\t\t\t\t</Header>\n\n\t\t\t\t<main>\n\t\t\t\t\t<VariationColors\n\t\t\t\t\t\tname=\"Shades\"\n\t\t\t\t\t\thue={hue}\n\t\t\t\t\t\tsaturation={saturation}\n\t\t\t\t\t\tlightness={lightness}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<VariationColors\n\t\t\t\t\t\tname=\"Tints\"\n\t\t\t\t\t\thue={hue}\n\t\t\t\t\t\tsaturation={saturation}\n\t\t\t\t\t\tlightness={lightness}\n\t\t\t\t\t/>\n\t\t\t\t</main>\n\t\t\t\t<Previews color={color}/>\n\t\t\t\t<Footer />\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}